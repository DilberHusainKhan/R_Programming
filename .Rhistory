install.packages("C:/Users/Humayun Khan/Downloads/SDSFoundations_1.1.zip", repos = NULL, type = "win.binary")
library(SDSFoundations)
detach("package:SDSFoundations", unload = TRUE)
library(SDSFoundations)
detach("package:SDSFoundations", unload = TRUE)
library(SDSFoundations)
library(SDSFoundations)
install.packages("C:/Users/Humayun Khan/Downloads/SDSFoundations_1.1 (1).zip", repos = NULL, type = "win.binary")
library(SDSFoundations)
detach("package:SDSFoundations", unload = TRUE)
library(SDSFoundations)
detach("package:SDSFoundations", unload = TRUE)
help("vector")
help("Data Frames")
help("data frames")
help("DataFrames")
clearPushBack()
clean
print("Dilber Husain KHan")
x<-10
x
10->y
y
y<-15
y<-15
z=99
apple<- c('red',"green","yellow")
print(apple)
print(class(apple))
apple<- c("red","green","yellow")
print(class(apple))
assign("P",c(10,20,30,40))
print(p)
print(P)
c(1:8)
c(1:8)->Q
D<<-100
print(class(apple))
#vector
apple<- c("red","green","yellow")
print(apple)
print(class(apple))
assign("P",c(10,20,30,40))
print(P)
print("Dilber Husain KHan")
#assignment -> , <- ,->> ,<<- ,=
x<-10
x
y<-15
z=99
#vector
apple<- c("red","green","yellow")
print(apple)
print(class(apple))
assign("P",c(10,20,30,40))
print(P)
print(P)
assign("v",c(1:5))
print(v)
sum(v)
w<-v*2
print(w)
z<-v+w
z
#vector
apple<- c("red","green","yellow") #c() is a combine function.
z>8
z[z>8 | z < 5]
assign("P",c(10,20,30,40))
print(P)
assign("v",c(1:5))
print(v)
sum(v)
w<-v*2
print(w)
z<-v+w
z
z>8
z[z>8 | z < 5]
x<-c(10,20,30,40,50,60)
x[2]
x[3:5]
x[c(1,3,5)]
length(x)
x[-2]
x[c(T,F,T,F,T,F)]
assign("P",c(10,20,30,40))
print(P)
assign("v",c(1:5))  #create a vector 1 2 3 4 5
print(v)
sum(v)       #Sum of vector
w<-v*2      #w= 2 4 6 8 10
print(w)
z<-v+w      #z =  3 6 9 12 15
z
z>8
z[z>8 | z < 5]    # print 3 9 12 15
x<-c(10,20,30,40,50,60)
x[2]
x[3:5]
x[c(1,3,5)]
x[c(T,F,T,F,T,F)]
print(x)
x<-list("a"=2.5,"b"=TRUE,"c"=1:3)
print(x)
str(x)
class(x)
x<-list("a"=2.5,"b"=TRUE,"c"=1:3)
print(x)
class(x)
str(x)
#Example
Rollno<- c(101,102,103)
#Example
Rollno<- c(101,102,103)
Sname<- c("DIlber","Irshad","Aryan")
Marks<- c(78,56,67)
Student<- list(Rollno,Sname,Marks)
Student
Student[1]
Student[[1]]
Student[[1]][2]
Student[1][2]
Student<- list("id"=Rollno,"Name"=Sname,"Scores"=Marks)
Student$id
Student$Name
Students$Scores
Student$Scores
Student[c(1,3)]
Student[C(id,"Scores")]
Student[C("id","Scores")]
Student[C('id',"Scores")]
Student[C('id','Scores')]
Student<- list("id"=Rollno,"Name"=Sname,"Scores"=Marks)
Student[C('id','Scores')]
Student[c('id','Scores')]
Age<- c(20,19,20)
Student<-list(Student,"Age"=Age)
Student
a<- array(c("green","blue","yellow"))dim=c(3,3,2)
a<- array(c("green","blue","yellow")),dim=c(3,3,2)
a<- array(c("green","blue","yellow")).dim=c(3,3,2)
a<- array(c("green","blue","yellow"),dim=c(3,3,2))
a<- array(c("green","blue","yellow"),dim=c(3,3,2))
print(a)
b<-array(1:5,c(2,4))
b
c<-array(1:5,c(2,4))
c
c<-array(1:10,c(2,4))
c
cal<- array((month.name),dim=c(3,4))
cal
a1<-c(1,2,3,4,5)
a2<-c(6,7,8,9,10,11,12)
a1
a1<-c(1,2,3,4,5)
a2<-c(6,7,8,9,10,11,12)
c.name =c('col1','col2','col3')
r.name=c('r1','r2')
m.name=c('arr1','arr2')
a1
final=array(c(a1,a2),dim = c(2,3,2),dimnames = list(r.name,c.name,m.name))
final
final[1,2,2]
newar<-array(c(a1,a2),dim = c(3,4,1))
newar[2:3,3,1]
newar
newar[2:3,c(1,3),1]
M = matrix(c("a","b","c","d"),nrow = 2,ncol = 2)
M = matrix(c("a","b","c","d"),nrow = 2,ncol = 2)
print(M)
#in matrix we will have to exact number of element as dimension
#To fill matrix rowwise
M = matrix(c("a","b","c","d"),nrow = 2,ncol = 2, byrow = T)
print(M)
#Another way of creating matrix is by using function .cbind() and .rbind()
c<- cbind(c(1,2,3),c("4l","5m",6))
c
rbind(c(1,2,3),c(4,5,6))
X<- c(1,2,3,4,5,6)
dim(X)<-c(2,3)
X
Z<-matrix(1:12,nrow = 3,ncol = 4,byrow = T)
Z[c(3,2),]
Z[,]
Z[c(1,2),c(2,3)]
Z[-1]
Z[-1,]
Z[Z%2==0]
Z[-1,]
Z<-matrix(1:12,nrow = 3,ncol = 4,byrow = T)
Z[Z%%2==0]
Z[2:3,c(1,3,4)]
Z[T,c(2,3)]
Z[2,2]<-10
cbind(c(11,22,33),Z)
Z<-Z[1:2,]
Z
rownames(Z)=c("A","B","C")
Z<-matrix(1:12,nrow = 3,ncol = 4,byrow = T)
rownames(Z)=c("A","B","C")
colnames(Z)=c("C1","C2","C3","C4","C5")
Z<-matrix(1:12,nrow = 3,ncol = 4,byrow = T)
rownames(Z)=c("A","B","C")
rownames(Z)=c("A","B","C")
colnames(Z)=c("C1","C2","C3","C4","C5")
Z
colnames(Z)=c("C2","C3","C4","C5")
colnames(Z)=c("C2","C3","C4","C5")
Z
setwd("F:/R")
x<- c(10,20,4,NA,8,30)
x
is.na(x)
is.nan(x)
id<-c(101,102,103,104,105)
sname<-c("Abc","Cde","Efd","ghi","xyz")
sage<-c(21,NA,23,19,25)
sage<-c(21,NA,23,19,25)
Marsks<-c(45,75,86,NA,96)
sbranch<-c("CSE","ECE","CE","CSE","EE")
stu<-data.frame(id,sname,sage,Marsks,sbranch)
str(stu)
stu
test<-stu$Marsks
test
test[which(is.na(test))]<-mean(test,na.rm = TRUE)
test
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks.na.rm = T)
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,a.rm = T)
stu$Marsks
stu
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,a.rm = T)
stu
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,a.rm = TRUE)
stu
x<- c(10,20,4,NA,8,30)
x
is.na(x)
is.nan(x)
id<-c(101,102,103,104,105)
sname<-c("Abc","Cde","Efd","ghi","xyz")
sage<-c(21,NA,23,19,25)
Marsks<-c(45,75,86,NA,96)
sbranch<-c("CSE","ECE","CE","CSE","EE")
stu<-data.frame(id,sname,sage,Marsks,sbranch)
stu<-data.frame(id,sname,sage,Marsks,sbranch)
str(stu)
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,a.rm = TRUE)
stu
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,na.rm = TRUE)
stu
stu$sage[which(is.na(stu$sage))]<- 20
stu
stu_na<-complete.cases(stu)
stu_na
na.omit(stu)
na.exclude(stu)
x<- c(10,20,4,NA,8,30)
x
is.na(x)
is.nan(x)
id<-c(101,102,103,104,105)
sname<-c("Abc","Cde","Efd","ghi","xyz")
sage<-c(21,NA,23,19,25)
Marsks<-c(45,75,86,NA,96)
sbranch<-c("CSE","ECE","CE","CSE","EE")
stu<-data.frame(id,sname,sage,Marsks,sbranch)
stu_na<-complete.cases(stu)
stu_na
na.omit(stu)
na.exclude(stu)
stu
test<-stu$Marsks
test
test[which(is.na(test))]<-mean(test,na.rm = TRUE)
test
stu$Marsks[which(is.na(stu$Marsks))]<-mean(stu$Marsks,na.rm = TRUE)
stu
stu$sage[which(is.na(stu$sage))]<- 20
stu
stu_na<-complete.cases(stu)
stu_na
na.omit(stu)
na.exclude(stu)
